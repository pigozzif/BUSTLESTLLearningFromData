<expr_first_level> ::= <prop> | <logic_first_level> | <past_first_level>
<prop> ::= <num_var> <comp> num_const
<logic_first_level> ::= .not <expr_first_level> | .or <expr_first_level> <expr_first_level>
<past_first_level> ::= .globally <expr_second_level> interval_const interval_const | .eventually <expr_second_level> interval_const interval_const | .until <expr_second_level> interval_const interval_const <expr_second_level>
<expr_second_level> ::= <prop> | <logic_second_level> | <past_second_level>
<logic_second_level> ::= .not <expr_second_level> | .or <expr_second_level> <expr_second_level>
<past_second_level> ::= .globally <expr_third_level_onwards> interval_const interval_const | .eventually <expr_third_level_onwards> interval_const interval_const | .until <expr_third_level_onwards> interval_const interval_const <expr_third_level_onwards>
<expr_third_level_onwards> ::= <prop> | <logic_third_level_onwards>
<logic_third_level_onwards> ::= .not <expr_third_level_onwards> | .or <expr_third_level_onwards> <expr_third_level_onwards>
<comp> ::= < | >
<digit> ::= 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0
<num_var> ::= x1 | x2
