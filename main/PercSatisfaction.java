import BuildingBlocks.I80FitnessFunction;
import eu.quanticol.moonlight.formula.DoubleDomain;
import eu.quanticol.moonlight.formula.Interval;
import eu.quanticol.moonlight.monitoring.temporal.TemporalMonitor;

import java.io.IOException;


public class PercSatisfaction {

    public static void main(String[] args) throws IOException {
        I80FitnessFunction fitnessFunction = new I80FitnessFunction();//"../../Desktop/Data_Science_and_Scientific_Computing/Thesis/TeLEX/tests/udacityData/steering2p.csv");/*"./data/Next_Generation_Simulation__NGSIM__Vehicle_Trajectories_and_Supporting_Data9.csv");*/
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("V_vel") - 0.499), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.832 - x.getDouble("S_dist"))), new DoubleDomain())
        //        , new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("V_vel") - 0.168))));  // 0.48287798347508787
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("E_dist") - 0.499), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.832 - x.getDouble("E_dist"))), new DoubleDomain())
        //                , new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("V_vel") - 0.168)))); // 0.48287798347508787
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.historicallyMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.877 - x.getDouble("E_dist")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("W_dist") - 0.126)),
        //        new DoubleDomain(), new Interval(28.0, 29.0)), new DoubleDomain(), TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("E_dist") - 0.377), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.63 - x.getDouble("E_dist"))), new DoubleDomain())))); // 0.505701633131465
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.832 - x.getDouble("E_dist")), new DoubleDomain(),
        //        TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.499 - x.getDouble("NE_dist")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("SE_dist") - 0.168)), new DoubleDomain()))));  // 0.5483743071095646
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.atomicMonitor(
        //        x -> x.getDouble("SW_dist") - 0.876), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("W_dist") - 0.125)),
        //        new DoubleDomain(), TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.628 - x.getDouble("S_dist")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("W_dist") - 0.375)), new DoubleDomain())))); // 0.507020979981881
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("SW_dist") - 0.168), new DoubleDomain(), TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.832 - x.getDouble("SW_dist")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("S_dist") - 0.499)), new DoubleDomain())))); // 0.5160994620727357
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.832 - x.getDouble("NW_dist")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("N_dist") - 0.499)), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("NE_dist") - 0.168))));  // 0.5160994620727357
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("V_vel") - 0.168), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.499 - x.getDouble("E_dist"))), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.832 - x.getDouble("V_vel")))));  // 0.5483743071095646
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("NE_dist") - 0.499), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.832 - x.getDouble("NE_dist"))), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("NE_dist") - 0.168))));  // 0.5160994620727357
        //System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("V_vel") - 0.374), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.627 - x.getDouble("SW_dist"))), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("W_dist") - 0.877), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.sinceMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("SW_dist") - 0.125), new Interval(29.0, 99.0), TemporalMonitor.atomicMonitor(x -> 0.061 - x.getDouble("S_dist")), new DoubleDomain()))))); // 0.07361234015799879

        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.historicallyMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.491), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.528 - x.getDouble("speed"))), new DoubleDomain()), new DoubleDomain(), new Interval(0.0, 99.0)))); // 0.5030145768144699
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.andMonitor(TemporalMonitor.historicallyMonitor(TemporalMonitor.atomicMonitor(x -> 0.736 - x.getDouble("torque")), new DoubleDomain(), new Interval(84, 100)), new DoubleDomain(), TemporalMonitor.onceMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("torque") - 0.502), new DoubleDomain(), new Interval(14, 98))), new DoubleDomain(), TemporalMonitor.historicallyMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.146), new DoubleDomain(), new Interval(2, 61)))));  // 0.5177835444970234
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.onceMonitor(TemporalMonitor.andMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.49), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.529 - x.getDouble("speed"))), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("torque") - 0.44)), new DoubleDomain(), new Interval(0.0, 99.0))));  // 0.5067541784324201
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.onceMonitor(TemporalMonitor.andMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.49), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.529 - x.getDouble("speed"))), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.909 - x.getDouble("torque"))), new DoubleDomain(), new Interval(0.0, 99.0))));  // 0.4901930855529268
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.718 - x.getDouble("torque")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.292)), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.892 - x.getDouble("torque")))));  // 0.458566883805484
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.718 - x.getDouble("torque")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.289)), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.891 - x.getDouble("torque")))));  // 0.45538554764429634
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.onceMonitor(TemporalMonitor.andMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.909 - x.getDouble("torque")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.488)), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.531 - x.getDouble("speed"))), new DoubleDomain(), new Interval(0, 99))));  // 0.5045409448217966
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.891 - x.getDouble("torque")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("torque") - 0.718)), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.289))));  // 0.5446901984547796
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.andMonitor(TemporalMonitor.notMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.89 - x.getDouble("torque")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("torque") - 0.715)), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.onceMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("torque") - 0.511), new DoubleDomain(), new Interval(3, 90)))));  // 0.4865771812080537
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.onceMonitor(TemporalMonitor.andMonitor(TemporalMonitor.andMonitor(TemporalMonitor.atomicMonitor(x -> 0.529 - x.getDouble("speed")), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.909 - x.getDouble("torque"))), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("speed") - 0.49)), new DoubleDomain(), new Interval(1.0, 100.0))));  // 0.49023049916043354

        /*System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.impliesMonitor(TemporalMonitor.globallyMonitor(TemporalMonitor.orMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("angle") - 1.1340350285125318), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.294536100237851 - x.getDouble("angle"))), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.21618836580056747 - x.getDouble("speed")))));  // 0.33890529188964846 0.05105287077715498
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.impliesMonitor(TemporalMonitor.globallyMonitor(TemporalMonitor.orMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("torque") - 1.1128746304295472), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 0.08806921535773392 - x.getDouble("torque"))), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 8.171221926736662 - x.getDouble("speed")))));  // 7.619791514956162 1.000075746099076
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.impliesMonitor(TemporalMonitor.globallyMonitor(TemporalMonitor.atomicMonitor(x -> x.getDouble("angle") - 0.8402104036163934), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> x.getDouble("torque") - 0.2610051291511024))));  // 0.41822045371242156 0.9845477957885169
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.impliesMonitor(TemporalMonitor.globallyMonitor(TemporalMonitor.atomicMonitor(x ->  0.5883607251339893 - x.getDouble("angle")), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.atomicMonitor(x -> 1.0007865381560677 - x.getDouble("torque")))));  // 1.1248195942341185E11 1.000075746099076
        System.out.println(fitnessFunction.percSatisfaction(TemporalMonitor.impliesMonitor(TemporalMonitor.globallyMonitor(TemporalMonitor.atomicMonitor(x ->  0.6004719228936406 - x.getDouble("torque")), new DoubleDomain()), new DoubleDomain(), TemporalMonitor.eventuallyMonitor(TemporalMonitor.atomicMonitor(x -> 0.7352730375820584 - x.getDouble("angle")), new DoubleDomain(), new Interval(0.0, 7)))));  // 0.1738050442569186 0.9550587343690792*/
    }

}
